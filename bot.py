import logging
from aiogram import Bot, Dispatcher, types
from aiogram.filters import Command
from aiosmtplib import send
from email.mime.text import MIMEText
from email.mime.multipart import MIMEMultipart
from email.mime.base import MIMEBase
from email import encoders
import os

from config import TOKEN, smtp_user, smtp_password

logging.basicConfig(level=logging.INFO)

bot = Bot(token=TOKEN)
dp = Dispatcher()

async def send_email(subject, body, attachments=None):
    message = MIMEMultipart()
    message['From'] = smtp_user
    message['To'] = smtp_user  
    message['Subject'] = subject

    message.attach(MIMEText(body, 'plain'))

    if attachments:
        for file_path, file_type in attachments:
            part = MIMEBase('application', 'octet-stream')
            try:
                with open(file_path, 'rb') as file:
                    part.set_payload(file.read())
            except Exception as e:
                logging.error(f"–û—à–∏–±–∫–∞ –ø—Ä–∏ –∑–∞–≥—Ä—É–∑–∫–µ —Ñ–∞–π–ª–∞ {file_path}: {e}")
                continue

            encoders.encode_base64(part)
            part.add_header('Content-Disposition', f'attachment; filename={os.path.basename(file_path)}')
            message.attach(part)

    try:
        await send(
            message, 
            hostname="smtp.gmail.com", 
            port=587, 
            username=smtp_user, 
            password=smtp_password, 
            start_tls=True
        )
        logging.info("Email –æ—Ç–ø—Ä–∞–≤–ª–µ–Ω —É—Å–ø–µ—à–Ω–æ.")
    except Exception as e:
        logging.error(f"–û—à–∏–±–∫–∞ –ø—Ä–∏ –æ—Ç–ø—Ä–∞–≤–∫–µ email: {e}")


@dp.message(Command('start'))
async def start(message: types.Message):
    await message.answer(
        "üëã –ü—Ä–∏–≤–µ—Ç! –Ø –ø–æ–º–æ–≥—É –æ—Ç–ø—Ä–∞–≤–∏—Ç—å —Ç–µ–±–µ —Å–æ–æ–±—â–µ–Ω–∏—è –Ω–∞ –ø–æ—á—Ç—É! –í—ã–±–µ—Ä–∏, —á—Ç–æ —Ç—ã —Ö–æ—á–µ—à—å –æ—Ç–ø—Ä–∞–≤–∏—Ç—å:\n"
        "/send_message - –æ—Ç–ø—Ä–∞–≤–∏—Ç—å —Å–æ–æ–±—â–µ–Ω–∏–µ\n"
        "/send_photo - –æ—Ç–ø—Ä–∞–≤–∏—Ç—å —Ñ–æ—Ç–æ\n"
        "/send_video - –æ—Ç–ø—Ä–∞–≤–∏—Ç—å –≤–∏–¥–µ–æ\n"
        "/send_audio - –æ—Ç–ø—Ä–∞–≤–∏—Ç—å –∞—É–¥–∏–æ"
    )


@dp.message(Command('send_message'))
async def send_message(message: types.Message):
    await message.answer("–û—Ç–ø—Ä–∞–≤—å –º–Ω–µ —Ç–µ–∫—Å—Ç–æ–≤–æ–µ —Å–æ–æ–±—â–µ–Ω–∏–µ, —á—Ç–æ–±—ã —è –æ—Ç–ø—Ä–∞–≤–∏–ª –µ–≥–æ –Ω–∞ –ø–æ—á—Ç—É.")
    @dp.message()
    async def handle_text_message(msg: types.Message):
        subject = "–ù–æ–≤–æ–µ —Å–æ–æ–±—â–µ–Ω–∏–µ"
        body = msg.text
        await send_email(subject, body)
        await msg.answer("–°–æ–æ–±—â–µ–Ω–∏–µ –æ—Ç–ø—Ä–∞–≤–ª–µ–Ω–æ –Ω–∞ –ø–æ—á—Ç—É!")


@dp.message(Command('send_photo'))
async def send_photo(message: types.Message):
    await message.answer("–û—Ç–ø—Ä–∞–≤—å —Ñ–æ—Ç–æ, –∫–æ—Ç–æ—Ä–æ–µ —Ç—ã —Ö–æ—á–µ—à—å –æ—Ç–ø—Ä–∞–≤–∏—Ç—å –Ω–∞ –ø–æ—á—Ç—É.")
    
    @dp.message(content_types=['photo'])
    async def handle_photo(msg: types.Message):
        file_id = msg.photo[-1].file_id
        file = await bot.get_file(file_id)
        file_path = file.file_path
        file_url = f'https://api.telegram.org/file/bot{TOKEN}/{file_path}'
        subject = "–ù–æ–≤–æ–µ —Ñ–æ—Ç–æ"
        body = "–í—ã –ø—Ä–∏—Å–ª–∞–ª–∏ —Ñ–æ—Ç–æ."
        attachments = [(file_url, "image/jpeg")]
        await send_email(subject, body, attachments=attachments)
        await msg.answer("–§–æ—Ç–æ –æ—Ç–ø—Ä–∞–≤–ª–µ–Ω–æ –Ω–∞ –ø–æ—á—Ç—É!")


@dp.message(Command('send_video'))
async def send_video(message: types.Message):
    await message.answer("–û—Ç–ø—Ä–∞–≤—å –≤–∏–¥–µ–æ, –∫–æ—Ç–æ—Ä–æ–µ —Ç—ã —Ö–æ—á–µ—à—å –æ—Ç–ø—Ä–∞–≤–∏—Ç—å –Ω–∞ –ø–æ—á—Ç—É.")
    
    @dp.message(content_types=['video'])
    async def handle_video(msg: types.Message):
        file_id = msg.video.file_id
        file = await bot.get_file(file_id)
        file_path = file.file_path
        file_url = f'https://api.telegram.org/file/bot{TOKEN}/{file_path}'
        subject = "–ù–æ–≤–æ–µ –≤–∏–¥–µ–æ"
        body = "–í—ã –ø—Ä–∏—Å–ª–∞–ª–∏ –≤–∏–¥–µ–æ."
        attachments = [(file_url, "video/mp4")]
        await send_email(subject, body, attachments=attachments)
        await msg.answer("–í–∏–¥–µ–æ –æ—Ç–ø—Ä–∞–≤–ª–µ–Ω–æ –Ω–∞ –ø–æ—á—Ç—É!")


@dp.message(Command('send_audio'))
async def send_audio(message: types.Message):
    await message.answer("–û—Ç–ø—Ä–∞–≤—å –∞—É–¥–∏–æ, –∫–æ—Ç–æ—Ä–æ–µ —Ç—ã —Ö–æ—á–µ—à—å –æ—Ç–ø—Ä–∞–≤–∏—Ç—å –Ω–∞ –ø–æ—á—Ç—É.")
    
    @dp.message(content_types=['audio'])
    async def handle_audio(msg: types.Message):
        file_id = msg.audio.file_id
        file = await bot.get_file(file_id)
        file_path = file.file_path
        file_url = f'https://api.telegram.org/file/bot{TOKEN}/{file_path}'
        subject = "–ù–æ–≤–æ–µ –∞—É–¥–∏–æ"
        body = "–í—ã –ø—Ä–∏—Å–ª–∞–ª–∏ –∞—É–¥–∏–æ."
        attachments = [(file_url, "audio/mpeg")]
        await send_email(subject, body, attachments=attachments)
        await msg.answer("–ê—É–¥–∏–æ –æ—Ç–ø—Ä–∞–≤–ª–µ–Ω–æ –Ω–∞ –ø–æ—á—Ç—É!")


async def main():
    await dp.start_polling(bot)


if __name__ == '__main__':
    import asyncio
    asyncio.run(main())
